; (set-logic QF_NRA)
; (set-option :precision 0.001)
(set-option :produce-unsat-cores true)

(declare-fun A_0_0 () Real)
(declare-fun A_0_1 () Real)
(declare-fun A_0_2 () Real)
(declare-fun A_0_3 () Real)
(declare-fun A_1_0 () Real)
(declare-fun A_1_1 () Real)
(declare-fun A_1_2 () Real)
(declare-fun A_1_3 () Real)
(declare-fun A_2_0 () Real)
(declare-fun A_2_1 () Real)
(declare-fun err () Real)
(declare-fun fx_0 () Real)
(declare-fun fx_1 () Real)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)


(assert (>= x_0 -100.000))
(assert (>= x_1 -100.000))
(assert (<= x_0 100.000))
(assert (<= x_1 100.000))
(assert (= A_0_0 (* 1.00000 x_0)))
(assert (= A_0_1 (* 1.00000 x_1)))
(assert (= A_0_2 (* -1.00000 x_0)))
(assert (= A_0_3 (* -1.00000 x_1)))
(assert (and (=> (>= A_0_0 0) (= A_1_0 A_0_0)) (=> (< A_0_0 0) (= A_1_0 0))))
(assert (and (=> (>= A_0_1 0) (= A_1_1 A_0_1)) (=> (< A_0_1 0) (= A_1_1 0))))
(assert (and (=> (>= A_0_2 0) (= A_1_2 A_0_2)) (=> (< A_0_2 0) (= A_1_2 0))))
(assert (and (=> (>= A_0_3 0) (= A_1_3 A_0_3)) (=> (< A_0_3 0) (= A_1_3 0))))
(assert (= A_2_0 (+ (* 1.10000 A_1_2) (* -1.10000 A_1_0))))
(assert (= A_2_1 (+ (* 1.10000 A_1_3) (* -1.10000 A_1_1))))
(assert (= fx_0 (* -1.10000000 x_0)))
(assert (= fx_1 (* -1.10000000 x_1)))
(assert (= err (+ (ite (>= (+ A_2_0 (* -1 fx_0)) 0) (+ A_2_0 (* -1 fx_0)) (* -1 (+ A_2_0 (* -1 fx_0)))) (ite (>= (+ A_2_1 (* -1 fx_1)) 0) (+ A_2_1 (* -1 fx_1)) (* -1 (+ A_2_1 (* -1 fx_1)))))))
(assert (> err 0.00100000))

(check-sat)
; (get-model)
; (get-unsat-core)
(exit)
